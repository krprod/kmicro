server:
      port: 8095
spring:
      application:
            name: payment
      profiles:
            active: "prod"
      datasource:
            url: jdbc:postgresql://localhost:5432/springmicro
            username: bloguser
            password: bloguser
      jpa:
            hibernate:
                  ddl-auto: create
            show-sql: true
#      redis:
#            host: localhost # Or your Redis host
#            port: 6379
#      kafka:
#            bootstrap-servers: localhost:9092
#            consumer:
#                  group-id: my-group
#                  key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#                  value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#            producer:
#                  key-serializer: org.apache.kafka.common.serialization.StringSerializer
#                  value-serializer: org.apache.kafka.common.serialization.StringSerializer
      kafka:
            bootstrap-servers: localhost:9092
            consumer:
                  properties:
                        schema.registry.url: http://localhost:8082
                        specific.avro.reader: true
                  group-id: payment-group
                  auto-offset-reset: earliest
                  key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
                  value-deserializer:  io.confluent.kafka.serializers.KafkaAvroDeserializer
            producer:
                  properties:
                        schema.registry.url: http://localhost:8082
                  key-serializer: org.apache.kafka.common.serialization.StringSerializer
                  value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
management:
      endpoints:
            web:
                  exposure:
                        include: health
      health:
            jdbc:
                  enabled: true